//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Box2D {

internal class b2World : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal b2World(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(b2World obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~b2World() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          Box2dPINVOKE.delete_b2World(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public b2World(b2Vec2 gravity) : this(Box2dPINVOKE.new_b2World(b2Vec2.getCPtr(gravity)), true) {
    if (Box2dPINVOKE.SWIGPendingException.Pending) throw Box2dPINVOKE.SWIGPendingException.Retrieve();
  }

  public void SetDestructionListener(b2DestructionListener listener) {
    Box2dPINVOKE.b2World_SetDestructionListener(swigCPtr, b2DestructionListener.getCPtr(listener));
  }

  public void SetContactFilter(b2ContactFilter filter) {
    Box2dPINVOKE.b2World_SetContactFilter(swigCPtr, b2ContactFilter.getCPtr(filter));
  }

  public void SetContactListener(b2ContactListener listener) {
    Box2dPINVOKE.b2World_SetContactListener(swigCPtr, b2ContactListener.getCPtr(listener));
  }

  public b2Body CreateBody(b2BodyDef def) {
    global::System.IntPtr cPtr = Box2dPINVOKE.b2World_CreateBody(swigCPtr, b2BodyDef.getCPtr(def));
    b2Body ret = (cPtr == global::System.IntPtr.Zero) ? null : new b2Body(cPtr, false);
    return ret;
  }

  public void DestroyBody(b2Body body) {
    Box2dPINVOKE.b2World_DestroyBody(swigCPtr, b2Body.getCPtr(body));
  }

  public b2Joint CreateJoint(b2JointDef def) {
    global::System.IntPtr cPtr = Box2dPINVOKE.b2World_CreateJoint(swigCPtr, b2JointDef.getCPtr(def));
    b2Joint ret = (cPtr == global::System.IntPtr.Zero) ? null : new b2Joint(cPtr, false);
    return ret;
  }

  public void DestroyJoint(b2Joint joint) {
    Box2dPINVOKE.b2World_DestroyJoint(swigCPtr, b2Joint.getCPtr(joint));
  }

  public void Step(float timeStep, int velocityIterations, int positionIterations) {
    Box2dPINVOKE.b2World_Step(swigCPtr, timeStep, velocityIterations, positionIterations);
  }

  public void ClearForces() {
    Box2dPINVOKE.b2World_ClearForces(swigCPtr);
  }

  public void QueryAABB(b2QueryCallback callback, b2AABB aabb) {
    Box2dPINVOKE.b2World_QueryAABB(swigCPtr, b2QueryCallback.getCPtr(callback), b2AABB.getCPtr(aabb));
    if (Box2dPINVOKE.SWIGPendingException.Pending) throw Box2dPINVOKE.SWIGPendingException.Retrieve();
  }

  public void RayCast(b2RayCastCallback callback, b2Vec2 point1, b2Vec2 point2) {
    Box2dPINVOKE.b2World_RayCast(swigCPtr, b2RayCastCallback.getCPtr(callback), b2Vec2.getCPtr(point1), b2Vec2.getCPtr(point2));
    if (Box2dPINVOKE.SWIGPendingException.Pending) throw Box2dPINVOKE.SWIGPendingException.Retrieve();
  }

  public b2Body GetBodyList() {
    global::System.IntPtr cPtr = Box2dPINVOKE.b2World_GetBodyList__SWIG_0(swigCPtr);
    b2Body ret = (cPtr == global::System.IntPtr.Zero) ? null : new b2Body(cPtr, false);
    return ret;
  }

  public b2Joint GetJointList() {
    global::System.IntPtr cPtr = Box2dPINVOKE.b2World_GetJointList__SWIG_0(swigCPtr);
    b2Joint ret = (cPtr == global::System.IntPtr.Zero) ? null : new b2Joint(cPtr, false);
    return ret;
  }

  public void SetAllowSleeping(bool flag) {
    Box2dPINVOKE.b2World_SetAllowSleeping(swigCPtr, flag);
  }

  public bool GetAllowSleeping() {
    bool ret = Box2dPINVOKE.b2World_GetAllowSleeping(swigCPtr);
    return ret;
  }

  public void SetWarmStarting(bool flag) {
    Box2dPINVOKE.b2World_SetWarmStarting(swigCPtr, flag);
  }

  public bool GetWarmStarting() {
    bool ret = Box2dPINVOKE.b2World_GetWarmStarting(swigCPtr);
    return ret;
  }

  public void SetContinuousPhysics(bool flag) {
    Box2dPINVOKE.b2World_SetContinuousPhysics(swigCPtr, flag);
  }

  public bool GetContinuousPhysics() {
    bool ret = Box2dPINVOKE.b2World_GetContinuousPhysics(swigCPtr);
    return ret;
  }

  public void SetSubStepping(bool flag) {
    Box2dPINVOKE.b2World_SetSubStepping(swigCPtr, flag);
  }

  public bool GetSubStepping() {
    bool ret = Box2dPINVOKE.b2World_GetSubStepping(swigCPtr);
    return ret;
  }

  public int GetProxyCount() {
    int ret = Box2dPINVOKE.b2World_GetProxyCount(swigCPtr);
    return ret;
  }

  public int GetBodyCount() {
    int ret = Box2dPINVOKE.b2World_GetBodyCount(swigCPtr);
    return ret;
  }

  public int GetJointCount() {
    int ret = Box2dPINVOKE.b2World_GetJointCount(swigCPtr);
    return ret;
  }

  public int GetContactCount() {
    int ret = Box2dPINVOKE.b2World_GetContactCount(swigCPtr);
    return ret;
  }

  public int GetTreeHeight() {
    int ret = Box2dPINVOKE.b2World_GetTreeHeight(swigCPtr);
    return ret;
  }

  public int GetTreeBalance() {
    int ret = Box2dPINVOKE.b2World_GetTreeBalance(swigCPtr);
    return ret;
  }

  public float GetTreeQuality() {
    float ret = Box2dPINVOKE.b2World_GetTreeQuality(swigCPtr);
    return ret;
  }

  public void SetGravity(b2Vec2 gravity) {
    Box2dPINVOKE.b2World_SetGravity(swigCPtr, b2Vec2.getCPtr(gravity));
    if (Box2dPINVOKE.SWIGPendingException.Pending) throw Box2dPINVOKE.SWIGPendingException.Retrieve();
  }

  public b2Vec2 GetGravity() {
    b2Vec2 ret = new b2Vec2(Box2dPINVOKE.b2World_GetGravity(swigCPtr), true);
    return ret;
  }

  public bool IsLocked() {
    bool ret = Box2dPINVOKE.b2World_IsLocked(swigCPtr);
    return ret;
  }

  public void SetAutoClearForces(bool flag) {
    Box2dPINVOKE.b2World_SetAutoClearForces(swigCPtr, flag);
  }

  public bool GetAutoClearForces() {
    bool ret = Box2dPINVOKE.b2World_GetAutoClearForces(swigCPtr);
    return ret;
  }

  public void ShiftOrigin(b2Vec2 newOrigin) {
    Box2dPINVOKE.b2World_ShiftOrigin(swigCPtr, b2Vec2.getCPtr(newOrigin));
    if (Box2dPINVOKE.SWIGPendingException.Pending) throw Box2dPINVOKE.SWIGPendingException.Retrieve();
  }

  public b2ContactManager GetContactManager() {
    b2ContactManager ret = new b2ContactManager(Box2dPINVOKE.b2World_GetContactManager(swigCPtr), false);
    return ret;
  }

  public b2Profile GetProfile() {
    b2Profile ret = new b2Profile(Box2dPINVOKE.b2World_GetProfile(swigCPtr), false);
    return ret;
  }

}

}
